// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

model User {
  id            Int           @id @default(autoincrement())
  name          String?       @db.VarChar(50)
  email         String?       @db.VarChar(50)
  password      String?       @db.VarChar(255)
  refresh_token String?       @db.VarChar(255)
  created_at    DateTime?     @default(now())
  updataed_at   DateTime?

  expenses          Expense[]
  country_logs      CountryLog[]
  meeting_schedules MeetingSchedule[]
  tasks             Task[]
  notifications     Notification[]
}

model Expense {
  id           Int       @id @default(autoincrement())
  user_id      Int
  title        String?   @db.VarChar(50)
  category     String?   @db.VarChar(50)
  type         String?   @db.VarChar(50)
  amount       Decimal?
  currency     String?   @db.VarChar(10)
  note         String?   @db.Text
  expense_date DateTime?
  created_at   DateTime? @default(now())
  is_deleted   Boolean?

  user User @relation(fields: [user_id], references: [id])
}

model CountryLog {
  id              Int       @id @default(autoincrement())
  user_id         Int
  country_name    String?   @db.VarChar(50)
  visa_type       String?   @db.VarChar(50)
  entry_date      DateTime?
  exit_date       DateTime?
  visa_limit_days Int?
  notify_at       DateTime?
  created_at      DateTime? @default(now())

  user User @relation(fields: [user_id], references: [id])
}

model MeetingSchedule {
  id          Int       @id @default(autoincrement())
  user_id     Int
  title       String?   @db.VarChar(255)
  description String?   
  start_time  DateTime
  end_time    DateTime
  created_at  DateTime? @default(now())
  is_deleted  Boolean?

  user User @relation(fields: [user_id], references: [id])
}

model Task {
  id          Int       @id @default(autoincrement())
  user_id     Int
  title       String?   @db.VarChar(50)
  description String?   @db.Text
  status      String?   @db.VarChar(50)
  priority    String?   @db.VarChar(50)
  start_date  DateTime?
  due_date    DateTime?
  notify_at   DateTime?
  created_at  DateTime? @default(now())
  is_deleted  Boolean?

  user User @relation(fields: [user_id], references: [id])
}

model Notification {
  id          Int              @id @default(autoincrement())
  user_id     Int
  source_type String?         @db.VarChar(50)
  source_id   Int
  title String?
  message     String?          @db.Text
  notify_at   DateTime?
  sent_at     DateTime?
  created_at  DateTime?        @default(now())
  sent Boolean? @default(false)

  user User @relation(fields: [user_id], references: [id])
}


